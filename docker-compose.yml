version: '3.8'

services:
  # DB
  # mongodb:
  #   image: mongo
  #   container_name: cms_mongodb
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     - TZ=Africa/Algiers  # Set the timezone
  #   volumes:
  #     - /root/apps/volumes/data/db:/data/db  # Bind mount host directory to container directory
  #   restart: unless-stopped

  # CACHE
  redis:
    image: redis:alpine
    container_name: cms_redis
    ports:
      - '6379:6379'
    volumes:
      - /root/apps/volumes/data/redis:/data  # Bind mount host directory to container directory
    restart: unless-stopped

  # BACKEND
  backend:
    container_name: cms_backend
    build:
      context: ./backend
    ports:
      - '3032:3032'
    environment:
      - PORT=3032
      - DB_URI=${DB_URI}
      - MONGODB_LOCAL_URI=${DB_URI}
      - CACHE_MANAGER_REDIS_URL=${CACHE_MANAGER_REDIS_URL}
    depends_on:
      # - mongodb
      - redis
    volumes:
      - ./backend/src:/usr/src/app/src
      - /root/apps/volumes/uploads:/usr/src/app/uploads
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  #FRONTEND
  frontend:
    container_name: cms_frontend
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production  # Set NODE_ENV to 'production'
      - SDK_BASE_URL=${SDK_BASE_URL}
      - NEXT_PUBLIC_API_BASE_URL_PROD=${SDK_BASE_URL}
      - NEXT_PUBLIC_API_BASE_URL_DEV=${SDK_BASE_URL}
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/usr/src/app/src
    restart: unless-stopped

  
volumes:
  mongodb_data:
  redis_data:
  uploads_data:

